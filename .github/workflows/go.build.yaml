name: Build
on:
  push:
    branches-ignore:
      - '**'
    tags:
      - 'v1.*.*'
jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get dependencies
        run: |
          go generate -v
          go install -v

      - name: Build
        run: |
          targets=${@-"darwin/amd64 linux/amd64"}

          for target in $targets; do
            os="$(echo $target | cut -d '/' -f1)"
            arch="$(echo $target | cut -d '/' -f2)"
            echo "--> Building project for: ${os}/${arch}"
            GOOS=$os GOARCH=$arch CGO_ENABLED=0 go build -o beach .
            zip "beach_${os}_${arch}.zip" beach
            ls -la
          done

      - name: Archive build result
        uses: actions/upload-artifact@v2
        with:
          name: beach-osx
          path: beach_darwin_amd64.zip

      - name: Archive build result
        uses: actions/upload-artifact@v2
        with:
          name: beach-linux
          path: beach_linux_amd64.zip

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}

          # FIXME:
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset-macos
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: beach_linux_amd64.zip
          asset_name: beach_linux_amd64.zip
          asset_content_type: application/zip

      - name: Upload Release Asset
        id: upload-release-asset-linux
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: beach_darwin_amd64.zip
          asset_name: beach_darwin_amd64.zip
          asset_content_type: application/zip
